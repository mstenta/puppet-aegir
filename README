AEGIR PUPPET MODULE
===================

This module manages the Aegir Hosting System.

It can install and upgrade Aegir from Debian packages, perform a 'manual'
installation of Aegir from source, preserving the .git repos for easy access
to an Aegir development environment (see http://drupal.org/project/aegir-up
for more details). It can also manage a number of extensions for Aegir that
greatly enhances its usability and scalability. Finally, it provides methods
for automating the building and importing of Drupal platforms.


DEPENDENCIES
------------

The Aegir module depends on the Drush Puppet Module, which can be downloaded
from: http://drupal.org/project/puppet-drush.


REQUIREMENTS
------------

The Aegir Puppet module is designed to work on Debian GNU/Linux systems and
derivatives. It provides rudimentary support for apt-get, which can be
disabled by setting the 'apt' parameter to 'false' on the 'aegir' class. As 
such, it should work with other *nix systems, assuming Aegir is available for 
install in the OS's packaging system, or Aegir is installed from source using 
the provided 'aegir::dev' class.

INSTALLATION
------------

To use this module, follow these directions:

1. Your modules directory will need all the files included in this
   repository placed under a directory called "aegir".

2. To install Drush, add one of these entries to your manifests (such as in
   manifests/nodes.pp):
   
       include aegir

   or

       class {'aegir':
         ensure => latest,
       }

  The following parameters are available:

    frontend_url: The URL at which to install the Aegir frontend site.
    db_host: The hostname of the database server on which to host the Aegir
        frontend site.
    db_user: The username for the database in which to install the Aegir
        frontend site.
    db_password: The password for the database in which to install the Aegir
        frontend site.
    admin_email: The email address of the administrator user.
    makefile: The makefile to use in building the hostmaster platform.
    db_server: The database server type to install. Currently only support
        'mysql'.
    web_server: The web server type to install. Currently supports 'apache2'
        and 'nginx'. Defaults to 'apache2'.
    api: The major version of Aegir to install. Currently supports '1' or '2'.
    apt: Whether to install via apt-get. Defaults to 'true'.
    dist: The Debian distribution from which to install via apt-get. Defaults
        to 'stable'.
    ensure: What state the package should be in. Valid values are 'present'
        (also called 'installed'), 'absent', 'purged', 'held', of 'latest'. 
        Values can match /./.
 
2a. To install Aegir from source, add one of these entries to your manifests:

       include aegir::dev

   or

       class {'aegir::dev':
         git_branch => '6.x-2.x',
         update     => true,
       }


  The following optional parameters are available:

    frontend_url: The URL at which to install the Aegir frontend site.
    db_host: The hostname of the database server on which to host the Aegir
        frontend site.
    db_user: The username for the database in which to install the Aegir
        frontend site.
    db_password: The password for the database in which to install the Aegir
        frontend site.
    admin_email: The email address of the administrator user/client.
    admin_name: The username and client name of the administrator user/client.
    makefile: The makefile to use in building the hostmaster platform.
    db_server: The database server type to install. Currently only support 
        'mysql'.
    web_server: The web server type to install. Currently supports 'apache2'
        and 'nginx'. Defaults to 'apache2'.
    apt:  Whether to install dependencies via apt-get. Defaults to 'true'.
    aegir_user: The name of the system user to run Aegir under. Defaults to
        'aegir'.
    aegir_root: The system path to set as the root of the Aegir install.
        Defaults to '/var/aegir'.
    web_group: The name of the web server's system user's group. Defaults to
        'www-data'.
    update: Whether to update to the latest code with each Puppet run.
        Defaults to false. 
    drush_make_version: (deprecated) Only for use with Aegir 1.x, in which
        case, it should be set to 2.3. Defaults to false.
    hostmaster_repo: The git repo from which to clone the hostmaster profile.
        Defaults to 'http://git.drupal.org/project/hostmaster.git'.
    hostmaster_branch: The git branch to use when cloning the hostmaster
        profile. Defaults to '7.x-3.x'.
    provision_repo: The git repo from which to clone the provision extension.
        Defaults to 'http://git.drupal.org/project/provision.git'.
    provision_branch: The git branch to use when cloning the provision
        extension. Defaults to '7.x-3.x'.



INSTRUCTIONS
------------

To use this module, follow these directions:

1. Your modules directory will need all the files included in this
   repository placed under a directory called "aegir"

2. Since Debian package installations depends on the Apt module, which in turn
   depends on some functions provided by the Common module, you'll need to add
   the following line in your manifests (ideally to manifests/modules.pp):

       import "common"

3. To install Aegir, add the following line to your manifests (ideally in 
   manifests/site.pp):
   
       include aegir

4. To install Hosting Queue Runner, add the following line to your manifests
   (ideally in manifests/site.pp):
   
       include aegir::queue_runner

5. To build platforms and import them into the Aegir front-end, add the lines
    such as the following to your manifests (ideally in manifests/site.pp):
 
       aegir::platform {'Open_Atrium':
         makefile => 'http://drupalcode.org/project/openatria_makefiles.git/blob_plain/refs/heads/master:/stub-openatrium.make',
       }


Options, variables and parameters
---------------------------------

A number of options are available for the package-based installation of Aegir.
You can:

  * Specify the front-end URL:
      $aegir_hostmaster_url = 'aegir.koumbit.org'

  * Use a remote database server:
      $aegir_db_host = 'mysql2.koumbit.net'
      $aegir_db_user = 'root'
      $aegir_db_password = 'Pa55w0rd'

  * Set the email of the admin user in the Aegir front-end:
      $aegir_email = 'admin@koumbit.org'

  * Specify and alternate makefile to build the front-end with:
      $aegir_makefile = 'alternate-aegir.make'

Aegir can also be installed following the 'manual' instructions
(http://community.aegirproject.org/installing/manual) instead of from packages
by using the following class instead of the default 'aegir' class:

    include aegir::manual_build

In addition to the options listed above for package-based installations, you
can:

  * Set an alternate name for the 'aegir' user:
      $aegir_user = 'aegir'
  * Move the Aegir root directory:
      $aegir_root = '/var/aegir'
  * Install a version other than the current one:
      $aegir_version = '6.x-1.6'
  * Specify a different version of Drush Make to install and use:
      $aegir_drush_make_version = '6.x-2.3'
  * Use a different webserver:
      $aegir_http_service_type = 'apache' 
      $aegir_web_group = 'www-data'

WARNING! Only change any of the above if you *really* know what you are doing,
and even then, think twice. Changing these can result in a broken and/or
unusable Aegir installation.

If you want to develop on Aegir, or try out the latest features, you can build
'manually' from the latest git repos (N.B. setting this variable forces a
manual build, and so makes '$aegir_manual_build = true' redundant):

    $aegir_dev_build = true

By default, a one-time login link will be posted following initial
installation. You can force posting such a link every time the manifest is run
by setting this variable:

    $aegir_force_login_link = true

Finally, aegir::platform allows for two optional parameters, in addition to the
required makefile. The first will force completion of platform builds, ignoring
errors:

    force_complete => true

The second will preserve VCS meta-data for projects built from developer repos,
rather than tarball packages:

    working_copy => true


--------------------------------------------------------------------------------
Original authors: Christopher Gervais (mailto:chris@koumbit.org)
                  Antoine Beaupré (mailto:anarcat@koumbit.org)
Copyright:: Copyright (c) 2011-2013 Réseau Koumbit Networks
License::   GPLv2 or later
